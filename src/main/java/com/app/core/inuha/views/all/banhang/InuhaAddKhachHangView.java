package com.app.core.inuha.views.all.banhang;

import com.app.common.helper.MessageModal;
import com.app.common.helper.MessageToast;
import com.app.common.infrastructure.constants.ErrorConstant;
import com.app.common.infrastructure.exceptions.ServiceResponseException;
import com.app.core.inuha.models.InuhaKhachHangModel;
import com.app.core.inuha.services.InuhaKhachHangService;
import com.app.core.inuha.views.all.InuhaBanHangView;
import com.app.core.inuha.views.quanly.InuhaSanPhamView;
import com.app.utils.ColorUtils;
import com.app.utils.NumberPhoneUtils;
import com.app.utils.ValidateUtils;
import com.app.views.UI.dialog.LoadingDialog;
import com.formdev.flatlaf.FlatClientProperties;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.swing.JPanel;
import raven.modal.ModalDialog;

/**
 *
 * @author InuHa
 */
public class InuhaAddKhachHangView extends JPanel {

    private final InuhaKhachHangService khachHangService = InuhaKhachHangService.getInstance();
    
    private final ExecutorService executorService = Executors.newSingleThreadExecutor();
    
    private InuhaKhachHangModel model;
        
    private final Color currentColor;
    
    /**
     * Creates new form InuhaThemKhachHangView
     */
    public InuhaAddKhachHangView() {
        initComponents();
        currentColor = lblTen.getForeground();
        txtTen.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Tối đa 250 ký tự...");
	txtSoDienThoai.setFormatterFactory(NumberPhoneUtils.getDefaultFormat());
        btnSubmit.setBackground(ColorUtils.BUTTON_PRIMARY);
        btnSubmit.setForeground(Color.WHITE);
	btnSubmit.setText("Thêm mới");
    }

    public InuhaAddKhachHangView(InuhaKhachHangModel model) {
        this();
        this.model = model;
	btnSubmit.setText("Cập nhật");
        txtTen.setText(model.getHoTen());
	txtSoDienThoai.setText(model.getSdt());
	rdoNam.setSelected(model.isGioiTinh());
	rdoNu.setSelected(!model.isGioiTinh());
	txtDiaChi.setText(model.getDiaChi());
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnSubmit = new javax.swing.JButton();
        lblTen = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        lblSoDienThoai = new javax.swing.JLabel();
        txtSoDienThoai = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        lblDiaChi = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();

        setOpaque(false);

        btnSubmit.setText("Thêm mới");
        btnSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblTen.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTen.setText("Tên khách hàng:");

        txtTen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTenKeyPressed(evt);
            }
        });

        btnCancel.setText("Huỷ bỏ");
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblSoDienThoai.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSoDienThoai.setText("Số điện thoại:");

        txtSoDienThoai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSoDienThoaiKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Giới tính:");

        buttonGroup1.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        lblDiaChi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDiaChi.setText("Địa chỉ:");

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        jScrollPane1.setViewportView(txtDiaChi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTen)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSoDienThoai, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                                .addComponent(lblSoDienThoai))
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoNam)
                                .addGap(18, 18, 18)
                                .addComponent(rdoNu)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDiaChi)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE))))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTen)
                    .addComponent(lblDiaChi))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSoDienThoai)
                        .addGap(10, 10, 10)
                        .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        handleClickButtoncancel();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        handleClickButtonSubmit();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtTenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { 
            handleClickButtonSubmit();
        }
    }//GEN-LAST:event_txtTenKeyPressed

    private void txtSoDienThoaiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoDienThoaiKeyPressed
        // TODO add your handling code here:
	if (evt.getKeyCode() == KeyEvent.VK_ENTER) { 
            handleClickButtonSubmit();
        }
    }//GEN-LAST:event_txtSoDienThoaiKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSubmit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblSoDienThoai;
    private javax.swing.JLabel lblTen;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTextArea txtDiaChi;
    private javax.swing.JFormattedTextField txtSoDienThoai;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables

    private void handleClickButtoncancel() {
        ModalDialog.closeModal(InuhaListKhachHangView.MODAL_ID_CREATE);
    }

    private void handleClickButtonSubmit() {
        String ten = txtTen.getText().trim();
        ten = ten.replaceAll("\\s+"," ");
	String sdt = txtSoDienThoai.getText().trim();
	boolean gioiTinh = rdoNam.isSelected();
	String diaChi = txtDiaChi.getText().trim();
        
        lblTen.setForeground(ColorUtils.DANGER_COLOR);
        if (ten.isEmpty()) { 
            MessageToast.error("Tên khách hàng không được bỏ trống");
            return;
        }
        if (ten.length() > 250) { 
            MessageToast.error("Tên khách hàng không được vượt quá 250 ký tự");
            return;
        }
        
        if (!ValidateUtils.isFullName(ten)) {
            MessageToast.error("Tên khách hàng không được chứa ký tự đặc biệt");
            return;
        }
        
        lblTen.setForeground(currentColor);
	
	lblSoDienThoai.setForeground(ColorUtils.DANGER_COLOR);
	if (NumberPhoneUtils.formatPhoneNumber(sdt).length() < 10) { 
            MessageToast.error("Số điện thoại không hợp lệ");
            return;
        }
	lblSoDienThoai.setForeground(currentColor);
	
	lblDiaChi.setForeground(ColorUtils.DANGER_COLOR);
        if (diaChi.length() > 2000) { 
            MessageToast.error("Địa chỉ không được vượt quá 2000 ký tự");
            txtDiaChi.requestFocus();
            return;
        }
        lblDiaChi.setForeground(currentColor);
	
	boolean isEdited = this.model != null;
		
	InuhaKhachHangModel khachHang = new InuhaKhachHangModel();
        khachHang.setHoTen(ten);
        khachHang.setSdt(sdt);
	khachHang.setGioiTinh(gioiTinh);
	khachHang.setDiaChi(diaChi);
	
	if (isEdited) { 
            khachHang.setId(model.getId());
            khachHang.setTrangThaiXoa(model.isTrangThaiXoa());
        }
		
        LoadingDialog loading = new LoadingDialog();
        executorService.submit(() -> {
	    try {
		if (!isEdited) { 
		    khachHangService.insert(khachHang);
		    MessageToast.success("Thêm mới khách hàng thành công.");
		    InuhaListKhachHangView.getInstance().loadDataPage(1);
		} else {
		    khachHangService.update(khachHang);
		    InuhaListKhachHangView.getInstance().loadDataPage();
		    int currentId = model == null ? -1 : model.getId();
		    if (khachHang.getId() == currentId) {
			InuhaBanHangView.getInstance().setKhachHang(khachHang);
		    }
		    MessageToast.success("Cập nhật khách hàng thành công.");
		}
		ModalDialog.closeModal(InuhaListKhachHangView.MODAL_ID_CREATE);
	    } catch (ServiceResponseException e) {
		e.printStackTrace();
		MessageToast.error(e.getMessage());
	    } catch (Exception e) {
		e.printStackTrace();
		MessageToast.error(ErrorConstant.DEFAULT_ERROR);
	    } finally {
		loading.dispose();
	    }  
        });
        loading.setVisible(true);
    }
}
